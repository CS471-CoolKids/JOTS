openapi: 3.0.0
info:
  title: JOTS API
  description: API for J? Online Tutoring System
  version: 1.0.0
paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        201:
          description: Registration successful
        400:
          description: Invalid role. Must be student or tutor.
        500:
          description: Internal server error
  /auth/login:
    post:
      summary: User login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email of the user
                password:
                  type: string
                  format: password
                  description: The password of the user
              required:
                - email
                - password
      responses:
        200:
          description: Login successful
        401:
          description: Incorrect email or password
        500:
          description: Internal server error
  /auth/make-manager:
    put:
      summary: Assign a user as a manager
      tags:
        - Authentication
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the user
                email:
                  type: string
                  description: The email of the user
                password:
                  type: string
                  format: password
                  description: The password of the user
              required:
                - name
                - email
                - password
      responses:
        200:
          description: User has been assigned as a manager
        403:
          description: Unauthorized
        500:
          description: Internal server error
  /auth/add-role/{userId}/{role}:
    put:
      summary: Add a role to a user
      tags:
        - Authentication
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: The ID of the user
        - in: path
          name: role
          required: true
          schema:
            type: string
          description: The role to add (student or tutor)
      responses:
        200:
          description: Role has been added
        400:
          description: Invalid role, user already has the role, or invalid userId
        403:
          description: Unauthorized
        404:
          description: User not found
        500:
          description: Internal server error

  /auth/remove-role/{userId}/{role}:
    put:
      summary: Remove a role from a user
      tags:
        - Authentication
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: The ID of the user
        - in: path
          name: role
          required: true
          schema:
            type: string
          description: The role to remove (student, tutor, or manager)
      responses:
        200:
          description: Role has been removed
        400:
          description: Invalid role or unauthorized
        403:
          description: Unauthorized
        404:
          description: User not found
        500:
          description: Internal server error
  /auth/delete-user/{userId}:
    delete:
      summary: Delete a user
      tags:
        - Authentication
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: The ID of the user
      responses:
        200:
          description: User has been deleted
        403:
          description: Unauthorized
        404:
          description: User not found
        500:
          description: Internal server error

  /users/{userId}:
    get:
      summary: Get user by ID
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: The ID of the user
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User found
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: User not found
        "500":
          description: Internal server error
  /users:
    get:
      summary: Get all users
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Users retrieved
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal server error
  /users/password:
    put:
      summary: Update user password
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                  format: password
                  description: The user's current password
                newPassword:
                  type: string
                  format: password
                  description: The new password
              required:
                - currentPassword
                - newPassword
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Password updated
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
components:
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
          description: The name of the user
        email:
          type: string
          description: The email of the user
        password:
          type: string
          format: password
          description: The password of the user
        role:
          type: string
          description: The role of the user (student, tutor, or manager)
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
