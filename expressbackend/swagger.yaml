openapi: 3.0.0
info:
  title: JOTS API
  description: API for J? Online Tutoring System
  version: 1.0.0
paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        201:
          description: Registration successful
        400:
          description: Invalid role. Must be student, tutor, or manager.
        401:
          description: Unauthorized to add manager role
        500:
          description: Internal server error
  /auth/login:
    post:
      summary: User login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email of the user
                password:
                  type: string
                  format: password
                  description: The password of the user
              required:
                - email
                - password
      responses:
        200:
          description: Login successful
        401:
          description: Incorrect email or password
        500:
          description: Internal server error

  /users:
    get:
      summary: Get all users
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Users retrieved
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal server error

  /users/{userId}:
    get:
      summary: Get user by ID
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: The ID of the user
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User found
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: User not found
        "500":
          description: Internal server error
    delete:
      summary: Delete a user
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: The ID of the user
      responses:
        200:
          description: User has been deleted
        403:
          description: Unauthorized
        404:
          description: User not found
        500:
          description: Internal server error
    put:
      summary: Update a user
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          description: ID of the user to update
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                currentPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        "200":
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

components:
  schemas:
    User:
      type: object
      properties:
        roles:
          type: array
          items:
            type: string
          description: Array of user roles (e.g., "student", "tutor", "manager")
        email:
          type: string
          description: User's email address
        password:
          type: string
          description: User's password
        name:
          type: string
          description: User's full name
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
